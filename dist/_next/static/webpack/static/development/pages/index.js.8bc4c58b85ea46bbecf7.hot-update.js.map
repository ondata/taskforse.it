{"version":3,"file":"static/webpack/static/development/pages/index.js.8bc4c58b85ea46bbecf7.hot-update.js","sources":["webpack:///./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\nimport {\n    map,\n    filter,\n    chunk,\n    zipObject,\n} from 'lodash'\n\nimport {\n    getGSheetUrl,\n    GSHEET_SHEET_TASKFORSES,\n} from '../config'\n\nimport {\n    Container,\n    Typography,\n    Box,\n} from '@material-ui/core'\n\nexport default function Index({ data }) {\n    return (\n        <Container maxWidth=\"xs\">\n            <Box my={4}>\n                <Typography variant=\"body1\" style={{ textAlign: \"center\" }}>\n                    nel dubbio ...\n                </Typography>\n                <Typography variant=\"h1\" style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n                    Task<br />Forse\n                </Typography>\n                <Typography variant=\"body1\" style={{ textAlign: \"right\" }}>\n                    by @ondatait\n                </Typography>\n            </Box>\n            <ul>\n            {\n                map(data, () => (\n                    <li key={d[\"Id\"]}>{d[\"Nome\"]}</li>\n                ))\n            }\n            </ul>\n        </Container>\n    )\n}\n\nexport async function getStaticProps(context) {\n\n    const response = await axios.get(getGSheetUrl(GSHEET_SHEET_TASKFORSES))\n\n    const dataKeys = map(\n        filter(\n            response.data.feed.entry,\n            e => +e[\"gs$cell\"].row === 1\n        ),\n        e => +e[\"gs$cell\"][\"$t\"] || e[\"gs$cell\"][\"$t\"] || null\n    )\n\n    const dataValues = chunk(\n        map(\n            filter(\n                response.data.feed.entry, \n                e => +e[\"gs$cell\"].row > 1\n            ),\n            e => +e[\"gs$cell\"][\"$t\"] || e[\"gs$cell\"][\"$t\"] || null\n        ),\n        dataKeys.length\n    )\n\n    const data = map(dataValues, v => zipObject(dataKeys, v))\n    \n    console.log(data[4].Mission)\n    return {\n        props: {\n            data,\n        },\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAYA;;AAMA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;;;;A","sourceRoot":""}